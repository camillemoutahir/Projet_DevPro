services:
  traefik:
    image: traefik:v2.10
    command:
      --configFile=/etc/traefik.yml
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik.yml
      - ./certs:/certs

  flowers-app:
    build: ./backend1
    container_name: flowers-app
    ports:
      - "3001:3001"
    env_file:
      - ./backend1/.env
    depends_on:
      - flowers-db
    volumes:
      - ./backend1:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flowers.rule=Host(`flowers.localtest.me`)"
      - "traefik.http.routers.flowers.entrypoints=websecure"
      - "traefik.http.routers.flowers.tls=true"
      - "traefik.http.services.flowers.loadbalancer.server.port=3001"

  flowers-db:
    image: postgres:14
    container_name: flowers-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    ports:
      - "5433:5432"
    volumes:
      - flowers_data:/var/lib/postgresql/data
      - ./backend1/database:/docker-entrypoint-initdb.d

  plants-app:
    build: ./backend2
    container_name: plants-app
    ports:
      - "3002:3002"
    env_file:
      - ./backend2/.env
    depends_on:
      - plants-db
    volumes:
      - ./backend2:/app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.plants.rule=Host(`plants.localtest.me`)"
      - "traefik.http.routers.plants.entrypoints=websecure"
      - "traefik.http.routers.plants.tls=true"
      - "traefik.http.services.plants.loadbalancer.server.port=3002"

  plants-db:
    image: postgres:14
    container_name: plants-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: example
    ports:
      - "5434:5432"
    volumes:
      - plants_data:/var/lib/postgresql/data
      - ./backend2/database:/docker-entrypoint-initdb.d

volumes:
  flowers_data:
  plants_data:
